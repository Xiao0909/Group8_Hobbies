// <auto-generated />
using System;
using Group8_Hobbies.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Group8_Hobbies.Migrations
{
    [DbContext(typeof(HobbiesContextModel))]
    [Migration("20220422135126_Games")]
    partial class Games
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Group8_Hobbies.Models.AnimationModel", b =>
                {
                    b.Property<int>("AnimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PublishYear")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int?>("PublisherId1")
                        .HasColumnType("int");

                    b.Property<int>("Rate")
                        .HasColumnType("int");

                    b.Property<int?>("WatchingYear")
                        .HasColumnType("int");

                    b.HasKey("AnimeId");

                    b.HasIndex("PublisherId1");

                    b.ToTable("Animations");

                    b.HasData(
                        new
                        {
                            AnimeId = 1,
                            Name = "Demon Slayer",
                            PublishYear = 2019,
                            PublisherId = 1,
                            Rate = 4,
                            WatchingYear = 2020
                        },
                        new
                        {
                            AnimeId = 2,
                            Name = "My NeighborTotoro",
                            PublishYear = 1988,
                            PublisherId = 2,
                            Rate = 5,
                            WatchingYear = 2007
                        },
                        new
                        {
                            AnimeId = 3,
                            Name = "White Cat Legend",
                            PublishYear = 2020,
                            PublisherId = 3,
                            Rate = 4,
                            WatchingYear = 2020
                        });
                });

            modelBuilder.Entity("Group8_Hobbies.Models.Games.GamesModel", b =>
                {
                    b.Property<int>("GamesModelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AvailablePlatform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameGenre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GamePublisher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PersonalRating")
                        .HasColumnType("int");

                    b.HasKey("GamesModelID");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GamesModelID = 1,
                            AvailablePlatform = "PS4/PS5/PC",
                            GameGenre = "Open world Adventure/Action Role Playing Game",
                            GameName = "Horizon: Zero Dawn",
                            GamePublisher = "Sony Interactive Entertainment",
                            PersonalRating = 9
                        },
                        new
                        {
                            GamesModelID = 2,
                            AvailablePlatform = "PS4/PS5",
                            GameGenre = "Open world Adventure/Action Role Playing Game",
                            GameName = "Ghost of Tsushima",
                            GamePublisher = "Sony Interactive Entertainment",
                            PersonalRating = 10
                        },
                        new
                        {
                            GamesModelID = 3,
                            AvailablePlatform = "PS4/PS5/PC/XBox 1/XBox Series S/X",
                            GameGenre = "Open world Adventure/Action Role Playing Game",
                            GameName = "Elden Ring",
                            GamePublisher = "Bandai Namco",
                            PersonalRating = 10
                        },
                        new
                        {
                            GamesModelID = 4,
                            AvailablePlatform = "All",
                            GameGenre = "Open world Adventure/Action Role Playing Game",
                            GameName = "Warframe",
                            GamePublisher = "Digital Extremes",
                            PersonalRating = 8
                        },
                        new
                        {
                            GamesModelID = 5,
                            AvailablePlatform = "All",
                            GameGenre = "Action/Adventure",
                            GameName = "Control",
                            GamePublisher = "505 Games",
                            PersonalRating = 9
                        },
                        new
                        {
                            GamesModelID = 6,
                            AvailablePlatform = "PS4/PS5/PC",
                            GameGenre = "Action",
                            GameName = "Sifu",
                            GamePublisher = "Sloclap",
                            PersonalRating = 7
                        },
                        new
                        {
                            GamesModelID = 7,
                            AvailablePlatform = "PS4/PS5/PC",
                            GameGenre = "Action/Adventture",
                            GameName = "God of War(2018)",
                            GamePublisher = "Sony Interactive Entertainment",
                            PersonalRating = 9
                        },
                        new
                        {
                            GamesModelID = 8,
                            AvailablePlatform = "All",
                            GameGenre = "Puzzle/Platformer/Horror",
                            GameName = "Little Nightmares",
                            GamePublisher = "Bandai Namco",
                            PersonalRating = 8
                        },
                        new
                        {
                            GamesModelID = 9,
                            AvailablePlatform = "PS4/PS5/PC/XBox 1/XBox Series S/X",
                            GameGenre = "Action/Hack & Slash",
                            GameName = "Sekiro: Shadows Die Twice",
                            GamePublisher = "Bandai Namco",
                            PersonalRating = 9
                        },
                        new
                        {
                            GamesModelID = 10,
                            AvailablePlatform = "PS4/PS5/PC/XBox 1/XBox Series S/X",
                            GameGenre = "First Person Shooter/MMO",
                            GameName = "Destiny 2",
                            GamePublisher = "Activision/Bungie",
                            PersonalRating = 7
                        });
                });

            modelBuilder.Entity("Group8_Hobbies.Models.PublishModel", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.ToTable("Publishes");

                    b.HasData(
                        new
                        {
                            PublisherId = 1,
                            Country = "Japan",
                            Name = "UFOTable"
                        },
                        new
                        {
                            PublisherId = 2,
                            Country = "Japan",
                            Name = "Ghibli"
                        },
                        new
                        {
                            PublisherId = 3,
                            Country = "China",
                            Name = "Nice Boat Animation Studio"
                        });
                });

            modelBuilder.Entity("Group8_Hobbies.Models.Sports.SportsModel", b =>
                {
                    b.Property<int>("SportsModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SportsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamLosses")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamWins")
                        .HasColumnType("int");

                    b.HasKey("SportsModelId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportsModelId = 1,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 29,
                            TeamName = "Golden State Warriors",
                            TeamWins = 53
                        },
                        new
                        {
                            SportsModelId = 2,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 18,
                            TeamName = "Phoenix Suns",
                            TeamWins = 64
                        },
                        new
                        {
                            SportsModelId = 3,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 26,
                            TeamName = "Memphis Grizzlies",
                            TeamWins = 56
                        },
                        new
                        {
                            SportsModelId = 4,
                            SportsDescription = "A sport where you score the ball into a post with your foot",
                            SportsName = "Soccer",
                            TeamLosses = 3,
                            TeamName = "Manchester City",
                            TeamWins = 24
                        },
                        new
                        {
                            SportsModelId = 5,
                            SportsDescription = "A sport where you score the ball into a post with your foot",
                            SportsName = "Soccer",
                            TeamLosses = 2,
                            TeamName = "Liverpool",
                            TeamWins = 23
                        });
                });

            modelBuilder.Entity("Group8_Hobbies.Models.AnimationModel", b =>
                {
                    b.HasOne("Group8_Hobbies.Models.PublishModel", "Publish")
                        .WithMany()
                        .HasForeignKey("PublisherId1");
                });
#pragma warning restore 612, 618
        }
    }
}
