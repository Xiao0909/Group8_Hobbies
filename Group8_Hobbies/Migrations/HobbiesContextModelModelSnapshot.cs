// <auto-generated />
using System;
using Group8_Hobbies.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Group8_Hobbies.Migrations
{
    [DbContext(typeof(HobbiesContextModel))]
    partial class HobbiesContextModelModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Group8_Hobbies.Models.AnimationModel", b =>
            {
                b.Property<int>("AnimeId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int")
                    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("PublishYear")
                    .HasColumnType("int");

                b.Property<string>("PublisherCountry")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("PublisherName")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Rate")
                    .HasColumnType("int");

                b.Property<int?>("WatchingYear")
                    .HasColumnType("int");

                b.HasKey("AnimeId");

                b.ToTable("Animations");

                b.HasData(
                    new
                    {
                        AnimeId = 1,
                        Name = "Demon Slayer",
                        PublishYear = 2019,
                        PublisherCountry = "Japan",
                        PublisherName = "UFOTable",
                        Rate = 4,
                        WatchingYear = 2020
                    },
                    new
                    {
                        AnimeId = 2,
                        Name = "My NeighborTotoro",
                        PublishYear = 1988,
                        PublisherCountry = "Japan",
                        PublisherName = "Ghibli",
                        Rate = 5,
                        WatchingYear = 2007
                    },
                    new
                    {
                        AnimeId = 3,
                        Name = "White Cat Legend",
                        PublishYear = 2020,
                        PublisherCountry = "China",
                        PublisherName = "Nice Boat Animation Studio",
                        Rate = 4,
                        WatchingYear = 2020
                    });
            });

            modelBuilder.Entity("Group8_Hobbies.Models.Sports.SportsModel", b =>
                {
                    b.Property<int>("SportsModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SportsDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SportsName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamLosses")
                        .HasColumnType("int");

                    b.Property<string>("TeamName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamWins")
                        .HasColumnType("int");

                    b.HasKey("SportsModelId");

                    b.ToTable("Sports");

                    b.HasData(
                        new
                        {
                            SportsModelId = 1,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 29,
                            TeamName = "Golden State Warriors",
                            TeamWins = 53
                        },
                        new
                        {
                            SportsModelId = 2,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 18,
                            TeamName = "Phoenix Suns",
                            TeamWins = 64
                        },
                        new
                        {
                            SportsModelId = 3,
                            SportsDescription = "A sport where you score the ball into a basket 10 feet high from the ground",
                            SportsName = "Basketball",
                            TeamLosses = 26,
                            TeamName = "Memphis Grizzlies",
                            TeamWins = 56
                        },
                        new
                        {
                            SportsModelId = 4,
                            SportsDescription = "A sport where you score the ball into a post with your foot",
                            SportsName = "Soccer",
                            TeamLosses = 3,
                            TeamName = "Manchester City",
                            TeamWins = 24
                        },
                        new
                        {
                            SportsModelId = 5,
                            SportsDescription = "A sport where you score the ball into a post with your foot",
                            SportsName = "Soccer",
                            TeamLosses = 2,
                            TeamName = "Liverpool",
                            TeamWins = 23
                        });
                });

            modelBuilder.Entity("Group8_Hobbies.Models.AnimationModel", b =>
                {
                    b.HasOne("Group8_Hobbies.Models.PublishModel", "Publish")
                        .WithMany()
                        .HasForeignKey("PublisherId1");
                });

#pragma warning restore 612, 618
        }
    }
}
